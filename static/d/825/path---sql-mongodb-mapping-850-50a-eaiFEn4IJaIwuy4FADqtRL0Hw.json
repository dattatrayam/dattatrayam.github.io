{"data":{"markdownRemark":{"html":"<p>This post explains various SQL statements and the corresponding MongoDB statements.</p>\n<li>The SQL examples assume a table named people.</li>\n<li>The MongoDB examples assume a collection named people that contain documents of the following prototype:</li>\n<pre><code class=\"language-js\">    {\n      _id: ObjectId(\"509a8fb2f3f4948bd2f983a0\"),\n      user_id: \"abc123\",\n      age: 55,\n      status: 'A'\n    }\n \n</code></pre>\n<p><b>Create and Alter</b>\nThe following section presents the various SQL statements related to table-level actions (CREATE, ALTER) and the corresponding MongoDB statements.</p>\n<p>SQL :</p>\n<pre><code class=\"language-js\">    CREATE TABLE people (\n        id MEDIUMINT NOT NULL\n            AUTO_INCREMENT,\n        user_id Varchar(30),\n        age Number,\n        status char(1),\n        PRIMARY KEY (id)\n    )\n    \n    ALTER TABLE people\n    ADD join_date DATETIME\n    \n    ALTER TABLE people\n    DROP COLUMN join_date\n \n</code></pre>\n<p>MongoDB:\nExplicitly create a collection. Collections do not describe or enforce the structure of its documents. i.e. there is no structural alteration at the collection level.</p>\n<pre><code class=\"language-js\">    db.createCollection(\"people\")\n    \n    db.people.updateMany(\n        { },\n        { $set: { join_date: new Date() } }\n    )\n    \n    db.people.updateMany(\n        { },\n        { $unset: { \"join_date\": \"\" } }\n    )\n \n</code></pre>\n<p><b>Insert</b>\nThe following section presents the various SQL statements related to inserting records into tables and the corresponding MongoDB statements.</p>\n<p>SQL :</p>\n<pre><code class=\"language-js\">    INSERT INTO people(user_id,age,status)\n            VALUES (\"bcd001\",45,\"A\")\n \n</code></pre>\n<p>MongoDB:</p>\n<pre><code class=\"language-js\">    db.people.insertOne(\n        { user_id: \"bcd001\", age: 45, status: \"A\" }\n    )\n \n</code></pre>\n<p><b>Select Records</b>\nThe following section presents the various SQL statements related to reading records from tables and the corresponding MongoDB statements.</p>\n<p>SQL :</p>\n<pre><code class=\"language-js\">    SELECT * FROM people\n    \n    //select specific columns\n    SELECT id, user_id, status FROM people\n    \n    //without id\n    SELECT user_id, status FROM people\n    //with condition select\n    SELECT * FROM people WHERE status = \"A\"\n \n</code></pre>\n<p>MongoDB:</p>\n<pre><code class=\"language-js\">    db.people.find()\n    //The find() method always includes the _id field in the returned documents unless specifically excluded through projection.\n    db.people.find(\n        { },\n        { user_id: 1, status: 1 }\n    )\n    \n    //excluded the _id\n    db.people.find(\n        { },\n        { user_id: 1, status: 1, _id: 0 }\n    )\n    \n    //with condition select\n    db.people.find(\n        { status: \"A\" }\n    )\n \n</code></pre>\n<p><b>Update Records</b>\nThe following section presents the various SQL statements related to updating existing records in tables and the corresponding MongoDB statements.</p>\n<p>SQL :</p>\n<pre><code class=\"language-js\">    UPDATE people SET status = \"C\" WHERE age > 25\n    \n    UPDATE people SET age = age + 3 WHERE status = \"A\"\n \n</code></pre>\n<p>MongoDB:</p>\n<pre><code class=\"language-js\">    db.people.updateMany(\n       { age: { $gt: 25 } },\n       { $set: { status: \"C\" } }\n    )\n    \n    db.people.updateMany(\n       { status: \"A\" } ,\n       { $inc: { age: 3 } }\n    )\n \n</code></pre>\n<p><b>DELETE Records</b>\nThe following section presents the various SQL statements related to deleting records from tables and the corresponding MongoDB statements.</p>\n<p>SQL :</p>\n<pre><code class=\"language-js\">    DELETE FROM people WHERE status = \"D\"\n    \n    DELETE FROM people\n \n</code></pre>\n<p>MongoDB:</p>\n<pre><code class=\"language-js\">    db.people.deleteMany( { status: \"D\" } )\n    \n    db.people.deleteMany({})\n \n</code></pre>","frontmatter":{"title":"SQL to MongoDB Mapping","description":"This post explains various SQL statements and the corresponding MongoDB statements","keywords":"SQL | MongoDB","image":null}},"site":{"siteMetadata":{"siteUrl":"https://dattatrayam.github.io/"}}},"pageContext":{"slug":"/sql-mongodb-mapping/"}}