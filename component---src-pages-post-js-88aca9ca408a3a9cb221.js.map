{"version":3,"sources":["webpack:///./src/pages/post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","listQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","props","postList","data","allMarkdownRemark","a","createElement","edges","map","_ref","i","node","className","to","fields","slug","frontmatter","title","description","date","keywords","m","module","exports","require","default","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","typography__WEBPACK_IMPORTED_MODULE_2__","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","injectStyles","ListLink","style","margin","maxWidth","padding","paddingTop","href","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-post-js-88aca9ca408a3a9cb221.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Link, graphql } from 'gatsby'\r\n\r\n\r\n \r\nexport default (props) => {\r\n    const postList = props.data.allMarkdownRemark;\r\nreturn (<Layout> \r\n<div>\r\n{postList.edges.map(({ node }, i) => (\r\n      <div className=\"post-list\">\r\n      <Link to={node.fields.slug} className=\"link\" >  <div className=\"title\">{node.frontmatter.title}</div>  </Link>\r\n         <div className=\"description\">\r\n          <p>{node.frontmatter.description}</p>\r\n         </div>\r\n         <div className=\"date\">\r\n           <p> {node.frontmatter.date} | <span className=\"keyword\">{node.frontmatter.keywords} </span></p>\r\n          </div>\r\n      </div>\r\n      ))}\r\n</div>\r\n</Layout>)\r\n}\r\n\r\n\r\nexport const listQuery = graphql`\r\n  query ListQuery {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          fields{\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM Do YYYY\")\r\n            title\r\n            description\r\n            keywords\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Typography from 'typography'\r\n\r\nconst typography = new Typography({\r\n  baseFontSize: '18px',\r\n  baseLineHeight: 1.666,\r\n  headerFontFamily: ['Avenir Next', 'Helvetica Neue', 'Segoe UI', 'Helvetica', 'Arial', 'sans-serif'],\r\n  bodyFontFamily: ['Segoe UI', 'serif'],\r\n  // See below for the full list of options.\r\n})\r\ntypography.injectStyles();\r\n\r\nconst ListLink = props => (  \r\n\t<li className=\"menuLink\">    \r\n\t<Link to={props.to}>{props.children}</Link>  </li>\r\n)\r\n\r\nexport default ({ children }) => (\r\n  <div>\r\n     <header>     \r\n        <ul className=\"menu\">        \r\n          <ListLink to=\"/\">Home</ListLink>      \r\n          <ListLink to=\"/post/\">Posts</ListLink>       \r\n          <ListLink to=\"/about/\">About</ListLink>       \r\n        </ul>    \r\n     </header>\r\n      <div className=\"content\"> \r\n      <div\r\n          style={{\r\n            margin: '0 auto',\r\n            maxWidth: 960,\r\n            padding: '0px 1.0875rem 1.45rem',\r\n            paddingTop: 0,\r\n          }}\r\n        >    \r\n        {children}\r\n        </div>\r\n      </div>\r\n      <footer>\r\n          <ul>\r\n            <li><a href=\"https://github.com/dattatrayam\"><span>Github</span></a></li>\r\n            <li><a href=\"https://www.linkedin.com/in/dattatraya-mule-733033b/\"><span>Linkedin</span></a></li>\r\n            <li><a href=\"https://eportfolio.greatlearning.in/dattatraya-mule\"><span>ePortfolio</span></a></li>\r\n          </ul>\r\n      </footer>\r\n\r\n  </div>\r\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}